[{"/Users/aseel/elevation/code/elevation-exercises/project/crm/src/index.js":"1","/Users/aseel/elevation/code/elevation-exercises/project/crm/src/App.js":"2","/Users/aseel/elevation/code/elevation-exercises/project/crm/src/reportWebVitals.js":"3","/Users/aseel/elevation/code/elevation-exercises/project/crm/src/classes/Store.js":"4","/Users/aseel/elevation/code/elevation-exercises/project/crm/src/classes/Client.js":"5","/Users/aseel/elevation/code/elevation-exercises/project/crm/src/components/Clients.jsx":"6","/Users/aseel/elevation/code/elevation-exercises/project/crm/src/components/Client.jsx":"7","/Users/aseel/elevation/code/elevation-exercises/project/crm/src/components/Popup.jsx":"8"},{"size":638,"mtime":1610440876420,"results":"9","hashOfConfig":"10"},{"size":532,"mtime":1610443738612,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1610358783270,"results":"12","hashOfConfig":"10"},{"size":1678,"mtime":1610445500149,"results":"13","hashOfConfig":"10"},{"size":736,"mtime":1610445563725,"results":"14","hashOfConfig":"10"},{"size":1757,"mtime":1610527234646,"results":"15","hashOfConfig":"10"},{"size":985,"mtime":1610527276020,"results":"16","hashOfConfig":"10"},{"size":1799,"mtime":1610527584771,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1s311lw",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/aseel/elevation/code/elevation-exercises/project/crm/src/index.js",[],["36","37"],"/Users/aseel/elevation/code/elevation-exercises/project/crm/src/App.js",[],"/Users/aseel/elevation/code/elevation-exercises/project/crm/src/reportWebVitals.js",[],"/Users/aseel/elevation/code/elevation-exercises/project/crm/src/classes/Store.js",["38"],"import {observable, makeObservable, action} from 'mobx'\nimport axios from 'axios'\nimport Client from './Client'\n\nclass Store{\n    constructor(){\n        this.clients = []\n\n        makeObservable(this, {\n            clients: observable,\n            loadAllClients: action,\n            search: action,\n            updateClient: action\n        })\n    }\n\n    loadAllClients = async (client) => {\n        const results = await axios.get(`http://localhost:3001/clients`)\n        // console.log(results)\n        this.clients = results.data.map(element => {\n            const name = element.name.split(' ')\n            return new Client(element.id, name[0], name[1], element.country, element.firstContact, element.email, element.sold, element.owner, true)\n        })\n    }\n\n    search = (searchStr, field) => {\n        this.clients = this.clients.map(element => {\n            if(!element[field].includes(searchStr)){\n                element.show = false\n            }\n            return element\n        })\n    }\n\n    // updates the name, surename, and country of the client\n    updateClient = async (client) => {\n        try{\n            const results = await axios.put(`http://localhost:3001/client`, client)\n            if(results){\n                const index = this.clients.findIndex(element => element.id == client.id)\n                this.clients[index].name = client.name\n                this.clients[index].surename = client.surename\n                this.clients[index].country = client.country\n            }else{\n                console.log('error: client was not updated!')\n            }\n        }catch(e){\n            console.log(e)\n        }\n    }\n\n\n}\n\nexport default Store\n","/Users/aseel/elevation/code/elevation-exercises/project/crm/src/classes/Client.js",[],"/Users/aseel/elevation/code/elevation-exercises/project/crm/src/components/Clients.jsx",[],"/Users/aseel/elevation/code/elevation-exercises/project/crm/src/components/Client.jsx",[],"/Users/aseel/elevation/code/elevation-exercises/project/crm/src/components/Popup.jsx",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":40,"column":76,"nodeType":"45","messageId":"46","endLine":40,"endColumn":78},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]